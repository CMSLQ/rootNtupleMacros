#
#############################     Example of file with list of cuts
#
#
#------------------------ Preliminary cut variables and values (cut level -1) here -----------------------------
# This first list of variable names and values are used to pass configurable values to the user code associated 
# to a variable name.
# The user can retrieve the values associated to a variable name via a provided function call
# [e.g. getPreCutValue1("eleFidRegion") and similarly for value2, value3 and value4 ]
# The idea is that the user can use these values to define the list of objects (electrons, jets, etc.) used in 
# analysis. No cut is automatically evaluated on these variables and the cut level must be equal to -1. 
# Variable names must be unique.
#
#VariableName	      value1	   value2		value3		value4		level
#------------	      ------------ -------------	------------	-------------	-----
# W_PID=24 , LQ_PID=42
muonPID		      13	   -			-		-		-1
motherPID	      42	   -			-		-		-1
#motherPID	      24	   -			-		-		-1
coneSizeMCmatchCut    0.07	   -			-		-		-1
ID_muonGlobalChi2_bar 5.0	   -			-		-		-1
ID_muonTrkD0_bar      0.25	   -			-		-		-1
ID_muonTrkHits_bar    7		   -			-		-		-1
ISO_muonTrkIso_bar    10.0	   -			-		-		-1
muonEta_bar	      1.2	   -			-		-		-1
ID_muonGlobalChi2_end 5.0	   -			-		-		-1
ID_muonTrkD0_end      0.25	   -			-		-		-1
ID_muonTrkHits_end    7		   -			-		-		-1
ISO_muonTrkIso_end    10.0	   -			-		-		-1
muonEta_end	      1.2	   2.4			-		-		-1
muonPtCut	      10	   -			-		-		-1      
muonEtaCut	      2.6	   -			-		-		-1
genPartPtCut	      40	   -			-		-		-1
#
#
#--------------------------------- Cuts (level 0,1,2,3 ... n) below --------------------------------------------
# The cut variable names, cut boundaries and histogram binnings are provided here by the user.
# In the event loop of the analysisClass_template.C, the user have to fill each variable with its value using
# a provided function call [ e.g. fillVariableWithValue("nEleFinal", number_of_electrons) ]
# The variable names in the user code has to match the names provided here.
# Variable names must be unique.
# The cut will be declared "passed" if
#    ( minValue1 < VariableName <= maxValue1 ) 
# in case only the first range (minValue1, maxValue1) is provided, 
# otherwise the cut will be declared "passed" if
#    ( minValue1 < VariableName <= maxValue1 )  OR  ( minValue2 < VariableName <= maxValue2 )
# in case even the second range (minValue2, maxValue2) is provided.
# The level of the cut (0,1,2 ... n) is provided by the user and can be used in the code to easily determine if
# groups of same-level cuts have passed or failed.
#
#VariableName	      minValue1(<) maxValue1(>=)	minValue2(<)	maxValue2(>=)	level	histoNbinsMinMax
#------------	      ------------ -------------	------------	-------------	-----	----------------
# empty		      0		   +inf			-		-		0	2 0 10
